FORMAT: 1A

# BoardMVC
Note: this is a draft.  The rules and requirements will be finalized on July 1st 2014.

You may have seen [TodoMVC](http://todomvc.com/) which shows the same todo list, created with
many different frameworks and libraries.  

It's very helpful, but people often find it lacking in common requirements for a web app.  It doesn't
handle users, persistence, reusable components, modals, AJAX, etc.

TodoMVC helps you quickly weed out the frameworks you don't like, while this allows you to see which 
you do like at medium scale.

BoardMVC is very similar to Reddit, which is a real site used by many people with all of these
requirements.  To focus on the front end, a server is provided for you but you can feel free to modify it
to fit your framework better.

## Rules

You should provide a version readable by JavaScript developers (JavaScript, Typescript, etc.) unless the
library is used over 50% of the time in a certain altjs language.  You may also provide additional versions
in any languages you like.  

This is a great time to show off your build process and tooling.  Use browserify, require.js, webpack, grunt,
gulp, and whatever other tools are common to see in projects using your framework.

HTML mocks and CSS are provided for you to base your application off of.  You may include additional CSS if your framework
applies classes to elements, or it's otherwise unavoidable.

Please document your tooling, extra css, and any bending of the rules in your README.md.

`npm run build` should compile the project.  `npm start` is already configured to run the server on http://localhost:8080.

If something is confusing or wrong, create an issue or fork and send a pull request.  This is the time to change it!

## Authentication
*BoardMVC* uses JSON Web Tokens for authentication.

## Media Types
This API uses JSON.

## Error States
The common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used.

# Group User Profile
Profile Endpoint

## Profile [/users/{username}]
The Profile resource has the following attributes: 

- id
- username
- name
- created_at

The states *id* and *created_at* are assigned by the *BoardMVC API* at the moment of creation. 

+ Parameters
    + username (string) ... Username of the User.

+ Model (application/json)

    + Body

            {
                "id": "42",
                "username": "TestUser"
                "name": "Some Person"
                "created_at": "2014-04-14T02:15:15Z",
            }

### Retrieve a Single Profile [GET]
+ Response 200
    
    [Profile][]
